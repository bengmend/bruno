name: Upload release packages

# on:
#   release:
#     types:
#       - created

on:
  pull_request:
    branches: [main]

jobs:
  mac-package:
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build Electron app
        run: npm run build:electron:mac

      - name: List build
        run: ls -la packages/bruno-electron/out

      - name: Extract version
        run: jq -r '"VERSION=v\(.version)"' packages/bruno-electron/package.json >> "$GITHUB_ENV"

      # - name: Upload the package to the release
      #   uses: shogo82148/actions-upload-release-asset@v1
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: packages/bruno-electron/out/bruno_${VERSION}_x64_mac.dmg

  # win-package:
  #   runs-on: windows-latest

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v4

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version-file: '.nvmrc'

  #     - name: Install dependencies
  #       run: npm ci --legacy-peer-deps

  #     - name: Build Electron app
  #       run: npm run build:electron:win

  #     - name: List build
  #       run: ls -la packages/bruno-electron/out

  #     - name: Extract version
  #       run: jq -r '"VERSION=v\(.version)"' packages/bruno-electron/package.json >> "$GITHUB_ENV"

  #     - name: Upload the package to the release
  #       uses: shogo82148/actions-upload-release-asset@v1
  #       with:
  #         upload_url: ${{ github.event.release.upload_url }}
  #         asset_path:

  # linux-package:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v4

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version-file: '.nvmrc'

  #     - name: Install dependencies
  #       run: npm ci --legacy-peer-deps

  #     - name: Build Electron app
  #       run: npm run build:electron:linux

  #     - name: List build
  #       run: ls -la packages/bruno-electron/out

  #     - name: Extract version
  #       run: jq -r '"VERSION=v\(.version)"' packages/bruno-electron/package.json >> "$GITHUB_ENV"

  #     - name: Upload the package to the release
  #       uses: shogo82148/actions-upload-release-asset@v1
  #       with:
  #         upload_url: ${{ github.event.release.upload_url }}
  #         asset_path:

  # deb-package:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v4

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version-file: '.nvmrc'

  #     - name: Install dependencies
  #       run: npm ci --legacy-peer-deps

  #     - name: Build Electron app
  #       run: npm run build:electron:deb

  #     - name: List build
  #       run: ls -la packages/bruno-electron/out

  #     - name: Extract version
  #       run: jq -r '"VERSION=v\(.version)"' packages/bruno-electron/package.json >> "$GITHUB_ENV"

  #     - name: Upload the package to the release
  #       uses: shogo82148/actions-upload-release-asset@v1
  #       with:
  #         upload_url: ${{ github.event.release.upload_url }}
  #         asset_path:

  # rpm-package:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v4

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version-file: '.nvmrc'

  #     - name: Install dependencies
  #       run: npm ci --legacy-peer-deps

  #     - name: Build Electron app
  #       run: npm run build:electron:rpm

  #     - name: List build
  #       run: ls -la packages/bruno-electron/out

  #     - name: Extract version
  #       run: jq -r '"VERSION=v\(.version)"' packages/bruno-electron/package.json >> "$GITHUB_ENV"

  #     - name: Upload the package to the release
  #       uses: shogo82148/actions-upload-release-asset@v1
  #       with:
  #         upload_url: ${{ github.event.release.upload_url }}
  #         asset_path:
